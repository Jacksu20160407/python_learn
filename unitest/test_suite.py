# -*- coding: utf-8 -*-
import unittest
from test_mathfunc import TestMathFunc
from HTMLTestRunner import HTMLTestRunner

if __name__ == '__main__':
    suite = unittest.TestSuite()
    suite.addTests(unittest.TestLoader().loadTestsFromTestCase(TestMathFunc))

    with open('HTMLReport.html', 'w') as f:
        runner = HTMLTestRunner(stream=f,
                                title='MathFunc Test Report',
                                description='generated by HTMLTestRunner.',
                                verbosity=2
                                )
        runner.run(suite)

# -*- coding: utf-8 -*-

# import unittest
# from test_mathfunc import TestMathFunc

# if __name__ == '__main__':
#     suite = unittest.TestSuite()
#     suite.addTests(unittest.TestLoader().loadTestsFromTestCase(TestMathFunc))

#     with open('UnittestTextReport.txt', 'a') as f:
#         runner = unittest.TextTestRunner(stream=f, verbosity=2)
#         runner.run(suite)



# import unittest
# from test_mathfunc import TestMathFunc

# if __name__ == '__main__':
#     suite = unittest.TestSuite()

#     # tests = [TestMathFunc("test_add"), TestMathFunc("test_minus"), TestMathFunc("test_divide")]
#     # suite.addTests(tests)

#     # 直接用addTest方法添加单个TestCase
# # suite.addTest(TestMathFunc("test_multi"))

# # 用addTests + TestLoader
# # loadTestsFromName()，传入'模块名.TestCase名'
# 	suite.addTests(unittest.TestLoader().loadTestsFromName('test_mathfunc.TestMathFunc'))
# 	suite.addTests(unittest.TestLoader().loadTestsFromNames(['test_mathfunc.TestMathFunc']))  # loadTestsFromNames()，类似，传入列表

# # loadTestsFromTestCase()，传入TestCase
# 	suite.addTests(unittest.TestLoader().loadTestsFromTestCase(TestMathFunc))

#     runner = unittest.TextTestRunner(verbosity=2)
#     runner.run(suite)